/*
 * EconomyKit API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using EconomyKit.UnityClient.Client;
using EconomyKit.UnityClient.Api;
using EconomyKit.UnityClient.Model;

namespace EconomyKit.UnityClient.Test
{
    /// <summary>
    ///  Class for testing CommodityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CommodityApiTests
    {
        private CommodityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CommodityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CommodityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CommodityApi
            //Assert.IsInstanceOf(typeof(CommodityApi), instance);
        }

        
        /// <summary>
        /// Test CreateCommodity
        /// </summary>
        [Test]
        public void CreateCommodityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CommodityCreateBody commodityCreateBody = null;
            //var response = instance.CreateCommodity(commodityCreateBody);
            //Assert.IsInstanceOf(typeof(CommodityResult), response, "response is CommodityResult");
        }
        
        /// <summary>
        /// Test GiveCommodity
        /// </summary>
        [Test]
        public void GiveCommodityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CommodityStackCreateBody commodityStackCreateBody = null;
            //var response = instance.GiveCommodity(commodityStackCreateBody);
            //Assert.IsInstanceOf(typeof(CommodityStackResult), response, "response is CommodityStackResult");
        }
        
        /// <summary>
        /// Test ListCommodities
        /// </summary>
        [Test]
        public void ListCommoditiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //var response = instance.ListCommodities(page);
            //Assert.IsInstanceOf(typeof(PaginatedResponseCommodityResult), response, "response is PaginatedResponseCommodityResult");
        }
        
    }

}
