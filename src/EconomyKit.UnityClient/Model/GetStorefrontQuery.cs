/*
 * EconomyKit API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EconomyKit.UnityClient.Client.OpenAPIDateConverter;

namespace EconomyKit.UnityClient.Model
{
    /// <summary>
    /// GetStorefrontQuery
    /// </summary>
    [DataContract]
    public partial class GetStorefrontQuery :  IEquatable<GetStorefrontQuery>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetStorefrontQuery" /> class.
        /// </summary>
        /// <param name="storefront">storefront.</param>
        /// <param name="app">app.</param>
        /// <param name="player">player.</param>
        public GetStorefrontQuery(Guid storefront = default(Guid), Guid app = default(Guid), Guid player = default(Guid))
        {
            this.Storefront = storefront;
            this.App = app;
            this.Player = player;
        }

        /// <summary>
        /// Gets or Sets Storefront
        /// </summary>
        [DataMember(Name="storefront", EmitDefaultValue=false)]
        public Guid Storefront { get; set; }

        /// <summary>
        /// Gets or Sets App
        /// </summary>
        [DataMember(Name="app", EmitDefaultValue=false)]
        public Guid App { get; set; }

        /// <summary>
        /// Gets or Sets Player
        /// </summary>
        [DataMember(Name="player", EmitDefaultValue=false)]
        public Guid Player { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetStorefrontQuery {\n");
            sb.Append("  Storefront: ").Append(Storefront).Append("\n");
            sb.Append("  App: ").Append(App).Append("\n");
            sb.Append("  Player: ").Append(Player).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetStorefrontQuery);
        }

        /// <summary>
        /// Returns true if GetStorefrontQuery instances are equal
        /// </summary>
        /// <param name="input">Instance of GetStorefrontQuery to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetStorefrontQuery input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Storefront == input.Storefront ||
                    (this.Storefront != null &&
                    this.Storefront.Equals(input.Storefront))
                ) && 
                (
                    this.App == input.App ||
                    (this.App != null &&
                    this.App.Equals(input.App))
                ) && 
                (
                    this.Player == input.Player ||
                    (this.Player != null &&
                    this.Player.Equals(input.Player))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Storefront != null)
                    hashCode = hashCode * 59 + this.Storefront.GetHashCode();
                if (this.App != null)
                    hashCode = hashCode * 59 + this.App.GetHashCode();
                if (this.Player != null)
                    hashCode = hashCode * 59 + this.Player.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
